{"version":3,"sources":["asyncTest.js"],"names":[],"mappings":";;;;;;;;AAQA;;;;AACA,QAAQ,gBAAR;AACA,QAAQ,qBAAR;AACA,IAAI,UAAQ,QAAQ,iDAAR,CAAZ;;AAEA,IAAI,YAAU,QAAQ,kDAAR,EAA4D,SAA1E;;AAEA,IAAI;AAAA,yDAAuB,iBAAe,IAAf;AAAA,YAGnB,IAHmB,EAGd,MAHc,EAGP,aAHO,EAGO,OAHP,EAGe,WAHf;AAAA;AAAA;AAAA;AAAA;AACvB,6BAAK,MAAL,CAAY,CAAZ;;AAEI,4BAHmB,WAGd,MAHc,WAGP,aAHO,WAGO,OAHP,WAGe,WAHf;;;AAKvB,+BAAK,QAAQ,4DAAR,EAAsE,kBAA3E;;AAEA,wCAAc,IAAI,QAAQ,eAAZ,EAAd;;;AAPuB;AAAA,+BAUV,KAAK,aAAL,CAVU;;AAAA;AAUvB,8BAVuB;;AAWvB,6BAAK,KAAL,CAAW,OAAO,EAAlB,EAAqB,UAAU,UAAV,CAAqB,IAArB,CAA0B,OAA1B,CAAkC,UAAlC,CAA6C,EAAlE,EAAqE,0BAArE;;;AAGA,sCAAc,IAAd,GAAmB,GAAnB;AAduB;AAAA,+BAeV,KAAK,aAAL,CAfU;;AAAA;AAevB,8BAfuB;;AAgBvB,6BAAK,KAAL,CAAW,OAAO,EAAlB,EAAqB,UAAU,UAAV,CAAqB,IAArB,CAA0B,SAA1B,CAAoC,UAApC,CAA+C,EAApE,EAAuE,2BAAvE;;;AAGA,sCAAc,IAAd,GAAmB,iBAAnB;AAnBuB;AAAA,+BAoBV,KAAK,aAAL,CApBU;;AAAA;AAoBvB,8BApBuB;;AAqBvB,6BAAK,KAAL,CAAW,OAAO,EAAlB,EAAqB,UAAU,UAAV,CAAqB,IAArB,CAA0B,SAA1B,CAAoC,UAApC,CAA+C,EAApE,EAAuE,2BAAvE;;;AAGA,sCAAc,IAAd,GAAmB,YAAnB;AACA,sCAAc,gBAAd,GAA+B,YAA/B;AAzBuB;AAAA,+BA0BV,KAAK,aAAL,CA1BU;;AAAA;AA0BvB,8BA1BuB;;AA2BvB,6BAAK,KAAL,CAAW,OAAO,EAAlB,EAAqB,UAAU,UAAV,CAAqB,gBAArB,CAAsC,MAAtC,CAA6C,UAA7C,CAAwD,EAA7E,EAAgF,oCAAhF;;;AAGA,kCAAQ,IAAI,QAAQ,SAAZ,CAAsB,EAAC,QAAO,CAAC,CAAT,EAAtB,CAAR;AA9BuB;AAAA,+BA+BV,KAAK,OAAL,CA/BU;;AAAA;AA+BvB,8BA/BuB;;AAgCvB,6BAAK,KAAL,CAAW,OAAO,EAAlB,EAAqB,UAAU,IAAV,CAAe,MAAf,CAAsB,GAAtB,CAA0B,UAA1B,CAAqC,EAA1D,EAA6D,4BAA7D;;;AAGA,kCAAQ,IAAI,QAAQ,SAAZ,CAAsB,EAAC,QAAO,SAAR,EAAtB,CAAR;AAnCuB;AAAA,+BAoCV,KAAK,OAAL,CApCU;;AAAA;AAoCvB,8BApCuB;;AAqCvB,6BAAK,KAAL,CAAW,OAAO,EAAlB,EAAqB,UAAU,IAAV,CAAe,MAAf,CAAsB,GAAtB,CAA0B,UAA1B,CAAqC,EAA1D,EAA6D,4BAA7D;;;AAGA,sCAAY,IAAI,QAAQ,aAAZ,CAA0B,EAAC,MAAK,GAAN,EAAU,YAAW,0BAArB,EAA1B,CAAZ;AAxCuB;AAAA,+BAyCV,KAAK,WAAL,CAzCU;;AAAA;AAyCvB,8BAzCuB;;AA0CvB,6BAAK,KAAL,CAAW,OAAO,EAAlB,EAAqB,UAAU,QAAV,CAAmB,IAAnB,CAAwB,MAAxB,CAA+B,UAA/B,CAA0C,EAA/D,EAAkE,kCAAlE;;AAEA,6BAAK,IAAL;;AA5CuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAvB;;AAAA;AAAA;AAAA;AAAA,GAAJ;;AA+CA,OAAO,OAAP,GAAe;AACX;AADW,CAAf","file":"asyncTest-compiled.js","sourcesContent":["/**\r\n * Created by wzhan039 on 2016-08-16.\r\n */\r\n/*\r\n*   为了测试mongo相关函数，需要\r\n*   1. 运行mongod\r\n*\r\n* */\r\n'use strict'\r\nrequire(\"babel-polyfill\");\r\nrequire(\"babel-core/register\")\r\nvar dbModel=require('../../../../server/model/mongo/common/structure')\r\n//检测错误结果\r\nvar inputRule=require('../../../../server/define/validateRule/inputRule').inputRule\r\n\r\nvar testAsyncMongoValidate=async function(test){\r\n    test.expect(7);\r\n\r\n    let func,result,departmentDoc,billDoc,employeeDoc\r\n\r\n    func=require('../../../../server/assist/wrapAsync/db/mongo/mongoValidate').asyncMongoValidate\r\n\r\n    departmentDoc=new dbModel.departmentModel()\r\n    //required\r\n\r\n    result=await func(departmentDoc)\r\n    test.equal(result.rc,inputRule.department.name.require.mongoError.rc,'required name check fail')\r\n\r\n    //minlength\r\n    departmentDoc.name='a'\r\n    result=await func(departmentDoc)\r\n    test.equal(result.rc,inputRule.department.name.minLength.mongoError.rc,'minlength name check fail')\r\n\r\n    //maxlength\r\n    departmentDoc.name='012345678901234'\r\n    result=await func(departmentDoc)\r\n    test.equal(result.rc,inputRule.department.name.maxLength.mongoError.rc,'maxlength name check fail')\r\n\r\n    //objectId\r\n    departmentDoc.name='0123456789'\r\n    departmentDoc.parentDepartment='0123456789'\r\n    result=await func(departmentDoc)\r\n    test.equal(result.rc,inputRule.department.parentDepartment.format.mongoError.rc,'format parentDepartment check fail')\r\n\r\n    //min\r\n    billDoc=new dbModel.billModel({amount:-1})\r\n    result=await func(billDoc)\r\n    test.equal(result.rc,inputRule.bill.amount.min.mongoError.rc,'min bill amount check fail')\r\n\r\n    //max\r\n    billDoc=new dbModel.billModel({amount:100000000})\r\n    result=await func(billDoc)\r\n    test.equal(result.rc,inputRule.bill.amount.max.mongoError.rc,'max bill amount check fail')\r\n\r\n    //match\r\n    employeeDoc=new dbModel.employeeModel({name:'a',department:'123456789012345678901234'})\r\n    result=await func(employeeDoc)\r\n    test.equal(result.rc,inputRule.employee.name.format.mongoError.rc,'match employee format check fail')\r\n\r\n    test.done();\r\n}\r\n\r\nmodule.exports={\r\n    testAsyncMongoValidate,\r\n}"]}